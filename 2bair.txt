df = pd.read_csv('airquality_data.csv', encoding='cp1252')
df.columns
df['so2'] = df['so2'].astype('float32')
df['no2'] = df['no2'].astype('float32')
df['rspm'] = df['rspm'].astype('float32')
df['spm'] = df['spm'].astype('float32')
df['date'] = df['date'].astype('string')
df=df.drop_duplicates()
df.isna().sum()
percent_missing = df.isnull().sum() * 100 / len(df)
percent_missing.sort_values(ascending=False)
df=df.drop(['stn_code','agency','sampling_date','location_monitoring_station','pm2_5'],axis= 1)
df.columns
col_var = ['state', 'location', 'type','date']
col_num = ['so2','no2','rspm','spm']

for col in df.columns:
    if df[col].dtype == 'object' or df[col].dtype == 'string':
        df[col] = df[col].fillna(df[col].mode()[0])
    else:
        df[col] = df[col].fillna(df[col].mean())


df.isna().sum()

subSet1 = df[['state', 'type']]
subSet2 = df[['state','location']]

concatenated_df = pd.concat([subSet1, subSet2], axis=1)

def remove_outliers(column):
    Q1 = column.quantile(0.25)
    Q3 = column.quantile(0.75)
    IQR = Q3 - Q1
    threshold = 1.5 * IQR
    outlier_mask = (column < Q1 - threshold) | (column > Q3 + threshold)
    return column[~outlier_mask]

col_name = ['so2', 'no2', 'rspm', 'spm']
for col in col_name:
    df[col] = remove_outliers(df[col])


import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))

for col in col_name:
    sns.boxplot(data=df[col])
    plt.title(col)
    plt.show()


from sklearn.preprocessing import LabelEncoder

col_label= ['state','location','type']
# Initialize LabelEncoder

encoder = LabelEncoder()
# Iterate over columns
for col in df.columns:
        # Fit and transform the column
        df[col] = encoder.fit_transform(df[col])